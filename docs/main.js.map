{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/makevisit/makevisit.component.ts","./src/app/makevisit/makevisit.component.html","./src/environments/environment.ts","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/admin/admin.component.ts","./src/app/admin/admin.component.html","./src/app/app.module.ts","./src/app/admin/makeuservisit/makeuservisit.component.ts","./src/app/admin/makeuservisit/makeuservisit.component.html","./src/app/admin/adminhistory/adminhistory.component.html","./src/app/admin/adminhistory/adminhistory.component.ts","./src/app/history/history.component.html","./src/app/history/history.component.ts","./src/app/userpanel/userpanel.component.html","./src/app/userpanel/userpanel.component.ts","./src/app/shared.service.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SharedService } from '../shared.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['../app.component.css', './register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n  Users: any = [];\n\n  constructor(private fb: FormBuilder,\n              private service: SharedService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    // this.refreshUsers();\n\n    this.registerForm = this.fb.group({\n      email: ['', [ Validators.required, Validators.email ]],\n      pass: ['', [ Validators.required, Validators.minLength(8) ]],\n      repass: ['', [ Validators.required, Validators.minLength(8) ]],\n      fst_name: ['', [ Validators.required, Validators.minLength(2) ]],\n      sec_name: ['', [ Validators.required, Validators.minLength(2) ]],\n      phone: ['', [ Validators.required, Validators.pattern('^[0-9]*$'), Validators.minLength(9), Validators.maxLength(9) ]],\n    },\n      { validator: this.checkPasswords('pass', 'repass') }\n    );\n  }\n  \n  //custom validator - is passwords same\n  checkPasswords(t_pass:string, t_repass:string) {\n    return (formGroup: FormGroup) => {\n      const pass = formGroup.controls[t_pass];\n      const repass = formGroup.controls[t_repass];\n      if (repass.errors && !repass.errors.confirmedValidator) {\n        return;\n      }\n      if (pass.value !== repass.value) {\n        repass.setErrors({ confirmedValidator: true });\n        pass.setErrors({ confirmedValidator: true });\n      } else {\n        repass.setErrors(null);\n        pass.setErrors(null);\n      }\n    }\n  }\n\n  submitHandler() {\n    var x = { Email: this.registerForm.get('email').value,\n              Pass: this.registerForm.get('pass').value }\n      this.service.registerLogin(x).subscribe(res => {\n      var getId = res\n      console.log(getId[0].UserId)\n      console.log(getId)\n      if (res != 'Failed to Add') {\n        var y = { UserId: getId[0].UserId,\n                  Name: this.registerForm.get('fst_name').value,\n                  LastName: this.registerForm.get('sec_name').value,\n                  Phone: this.registerForm.get('phone').value };\n        this.service.register(y).subscribe(res => {\n          if (res != 'Failed to Add')\n          console.log(res)\n          this.router.navigate(['../login'])\n        })\n      }\n      else {\n        console.log('register error')\n        this.registerForm.reset()\n      }\n    })\n  }\n\n  get email() { return this.registerForm.get('email'); }\n  get pass() { return this.registerForm.get('pass'); }\n  get repass() { return this.registerForm.get('repass'); }\n  get fst_name() { return this.registerForm.get('fst_name'); }\n  get sec_name() { return this.registerForm.get('sec_name'); }\n  get phone() { return this.registerForm.get('phone'); }\n}\n","<div class=\"content\">\n   <h1>Salon fryzjerski</h1>\n   \n   <form [formGroup]=\"registerForm\" (ngSubmit)=\"submitHandler()\">\n\n      <label for=\"email\">email</label>\n      <input id=\"email\" type=\"text\" formControlName=\"email\"\n      [ngClass]=\"{invalid: email.invalid && email.touched, valid: email.valid && email.touched}\">\n\n      <label for=\"pass\">hasło</label>\n      <input id=\"pass\" type=\"password\" formControlName=\"pass\"\n      [ngClass]=\"{invalid: pass.invalid && pass.touched, valid: pass.valid && pass.touched}\">\n\n      <label for=\"repass\">powtórz hasło</label>\n      <input id=\"repass\" type=\"password\" formControlName=\"repass\"\n      [ngClass]=\"{invalid: repass.invalid && repass.touched, valid: repass.valid && repass.touched}\">\n\n      <label for=\"fst_name\">imię</label>\n      <input id=\"fst_name\" type=\"text\" formControlName=\"fst_name\"\n      [ngClass]=\"{invalid: fst_name.invalid && fst_name.touched, valid: fst_name.valid && fst_name.touched}\">\n\n      <label for=\"sec_name\">nazwisko</label>\n      <input id=\"sec_name\" type=\"text\" formControlName=\"sec_name\"\n      [ngClass]=\"{invalid: sec_name.invalid && sec_name.touched, valid: sec_name.valid && sec_name.touched}\">\n\n      <label for=\"phone\">numer telefonu</label>\n      <input id=\"phone\" type=\"text\" formControlName=\"phone\"\n      [ngClass]=\"{invalid: phone.invalid && phone.touched, valid: phone.valid && phone.touched}\">\n   \n      <div class=\"btns\">\n         <button class=\"btn\" routerLink=\"/\">Wstecz</button>\n         <button class=\"btn\" [disabled]=\"registerForm.invalid\" routerLink=\"/register\">Rejestruj</button>\n      </div>\n   </form>\n </div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { SharedService } from '../shared.service';\nimport { ILoggedUser } from '../login/interface';\n\n@Component({\n  selector: 'app-makevisit',\n  templateUrl: './makevisit.component.html',\n  styleUrls: ['./makevisit.component.css']\n})\nexport class MakevisitComponent implements OnInit {\n\n  visitForm: FormGroup;\n  services: any = this.dataService.servicesData;\n  radioValue:number = null\n  userData: ILoggedUser = this.dataService.sharedData;\n\n  constructor(private fb: FormBuilder,\n              private service: SharedService,\n              private dataService: DataService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.visitForm = this.fb.group({\n      hour: ['', [ Validators.required ]],\n      date: ['', [ Validators.required ]],\n      type: ['', [ Validators.required ]],\n      status: ['N', [ Validators.required ]]\n    })\n  }\n\n  // dateValidator(date: string){\n  //   this.service.checkdate({Ddate: date}).subscribe(res => {\n  //     if(res != 'Invalid') \n  //       return console.log(res)\n  //   })\n  // }\n\n  submitHandler() {\n    var x = { Customerr: this.userData.CustomerId,\n              servicee: this.visitForm.get('type').value, \n              Employeee: 1,\n              DiscountId: 1,\n              Ddate: this.visitForm.get('date').value,\n              Hhour: this.visitForm.get('hour').value,\n              Status: this.visitForm.get('status').value }\n      // this.dateValidator(this.visitForm.get('date').value)\n      this.service.makevisit(x).subscribe(res => {\n        if (res != 'Failed to Add')\n          this.router.navigate(['../userpanel'])\n        else {\n          console.log('register error')\n          this.visitForm.reset()\n        }\n      })\n  }\n}\n","<div class=\"content\">\r\n   <h1>Wybierz termin i usługę</h1>\r\n   <div class=\"grey_list\">\r\n      <form [formGroup]=\"visitForm\" (ngSubmit)=\"submitHandler()\">\r\n         <label>Godzina</label>\r\n         <input type=\"time\" id=\"time\" formControlName=\"hour\">\r\n         <label>Data</label>\r\n         <input type=\"date\" id=\"date\" formControlName=\"date\">\r\n      \r\n         <div class=\"lighter\">\r\n\r\n            <div *ngFor=\"let service of services; let i = index\">\r\n               <label for=\"s{{ service.ServiceeId }}\">\r\n                  <input id=\"s{{ service.ServiceeId }}\" [value] = 'service.ServiceeId' type=\"radio\" formControlName=\"type\">\r\n                  {{ services[i].Name }} {{ services[i].Price }} zł\r\n               </label>\r\n            </div>\r\n\r\n         </div>\r\n         <div class=\"div_buttons\">\r\n            <button class=\"btn\" routerLink=\"/makevisit\">Umów wizytę</button>\r\n            <button class=\"btn\" routerLink=\"/userpanel\">Wstecz</button>\r\n         </div>\r\n      </form>\r\n   </div>\r\n</div>\r\n\r\n<!-- <div *ngFor=\"let enum of enum_details\">\r\n   <label for=\"enum_answer_{{enum.name}}\">\r\n     <input id=\"enum_answer_{{enum.name}}\" [value]='enum.name' type=\"radio\" name=\"enums\" [(ngModel)]=\"radioSelected\">\r\n     {{enum.name}}\r\n   </label>\r\n </div> -->","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from \"@angular/core\";\r\nimport { ILoggedUser } from \"./login/interface\";\r\n\r\n\r\n@Injectable()\r\nexport class DataService {\r\n   public sharedData: ILoggedUser\r\n   public servicesData: any\r\n}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fryzjer-project';\n}\n","<div class=\"main\">\n  <div class=\"red-line\"></div>\n\n    <router-outlet></router-outlet>\n\n  <div class=\"red-line bot\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\n   <h1>Panel administratora</h1>\n   <div class=\"div_buttons\">\n      <button class=\"btn\" routerLink=\"/makeuservisit\">Umów wizytę dla klienta</button>\n      <button class=\"btn\" routerLink=\"/adminhistory\">Zaznacz wykonanie wizyty</button>\n      <button class=\"btn\" routerLink=\"/login\">Wyloguj</button>\n   </div>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { MainComponent } from './main/main.component';\nimport { FormsModule, ReactiveFormsModule  } from '@angular/forms';\nimport { LoginComponent } from './login/login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { SharedService } from './shared.service';\nimport { UserpanelComponent } from './userpanel/userpanel.component';\nimport { MakevisitComponent } from './makevisit/makevisit.component';\nimport { DataService } from './data.service';\nimport { HistoryComponent } from './history/history.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AdminhistoryComponent } from './admin/adminhistory/adminhistory.component';\nimport { MakeuservisitComponent } from './admin/makeuservisit/makeuservisit.component';\n\n@NgModule({\n  declarations: [ AppComponent, RegisterComponent, MainComponent, LoginComponent, UserpanelComponent, MakevisitComponent, HistoryComponent, AdminComponent, AdminhistoryComponent, MakeuservisitComponent ],\n  imports: [ BrowserModule, AppRoutingModule, FormsModule, ReactiveFormsModule, HttpClientModule ],\n  providers: [SharedService, DataService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { SharedService } from 'src/app/shared.service';\nimport { DataService } from 'src/app/data.service';\nimport { TouchSequence } from 'selenium-webdriver';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-makeuservisit',\n  templateUrl: './makeuservisit.component.html',\n  styleUrls: ['./makeuservisit.component.css']\n})\nexport class MakeuservisitComponent implements OnInit {\n\n  services: any = this.dataService.servicesData\n  visitFormA: FormGroup\n  currentUser: any;\n\n  constructor(private fb: FormBuilder,\n              private service: SharedService,\n              private dataService: DataService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.getServicee()\n    this.visitFormA = this.fb.group({\n      name: ['', [ Validators.required ]],\n      lastname: ['', [ Validators.required ]],\n      phone: ['', [ Validators.required ]],\n      hour: ['', [ Validators.required ]],\n      date: ['', [ Validators.required ]],\n      type: ['', [ Validators.required ]],\n      status: ['N', [ Validators.required ]]\n    })\n  }\n\n  submitHandler() {\n    var x = { Name: this.visitFormA.get('name').value,\n              LastName: this.visitFormA.get('lastname').value,\n              Phone: this.visitFormA.get('phone').value };\n\n    this.service.getUser(x).subscribe(res => {\n      if (res != 'Failed to Add') {\n        this.currentUser = res\n        console.log(this.currentUser)\n        this.addVisitt()\n      } else {\n        console.log(\"error\")\n    }})\n  }\n\n  getServicee() {\n    this.service.services().subscribe(res => this.dataService.servicesData = res)\n  }\n\n  addVisitt() {\n    var y = { Customerr: this.currentUser[0].CustomerId,\n              servicee: this.visitFormA.get('type').value,\n              Employeee: 1,\n              DiscountId: 1,\n              Ddate: this.visitFormA.get('date').value,\n              Hhour: this.visitFormA.get('hour').value,\n              Status: this.visitFormA.get('status').value };\n\n    this.service.makevisit(y).subscribe(res2 => {\n      console.log(y)\n      if (res2 != 'Failed to Add')\n        this.router.navigate(['../adminpanel'])\n      else\n        console.log(res2)\n        this.visitFormA.reset()\n    })\n  }\n}\n","<div class=\"content\">\n   <h1>Wybierz termin i usługę dla klienta</h1>\n   <div class=\"grey_list\">\n      <form [formGroup]=\"visitFormA\" (ngSubmit)=\"submitHandler()\">\n         <label>Imię</label>\n         <input type=\"text\" id=\"name\" formControlName=\"name\">\n         <label>Nazwisko</label>\n         <input type=\"text\" id=\"lastname\" formControlName=\"lastname\">\n         <label>Telefon</label>\n         <input type=\"text\" id=\"phone\" formControlName=\"phone\"><br>\n      \n         <label>Godzina</label>\n         <input type=\"time\" id=\"time\" formControlName=\"hour\">\n         <label>Data</label>\n         <input type=\"date\" id=\"date\" formControlName=\"date\">\n      \n         <div class=\"lighter\">\n\n            <div *ngFor=\"let service of services; let i = index\">\n               <label for=\"s{{ service.ServiceeId }}\">\n                  <input id=\"s{{ service.ServiceeId }}\" [value] = 'service.ServiceeId' type=\"radio\" formControlName=\"type\">\n                  {{ services[i].Name }} {{ services[i].Price }} zł\n               </label>\n            </div>\n\n         </div>\n         <div class=\"div_buttons\">\n            <button class=\"btn\" routerLink=\"/makeuservisit\">Umów wizytę</button>\n            <button class=\"btn\" routerLink=\"/adminpanel\">Wstecz</button>\n         </div>\n      </form>\n   </div>\n</div>","<div class=\"content\">\r\n   <h1>Zaznacz wykonanie wizyty</h1>\r\n   <div class=\"grey_list\">\r\n      <ul>\r\n         <li *ngFor=\"let visit of visits\">\r\n            <div class=\"text\">{{visit.Customerr.Name}}</div>\r\n            <div class=\"text\">{{visit.Customerr.LastName}}</div>\r\n            <div class=\"text\">{{visit.Ddate}}</div>\r\n            <div class=\"text\">{{visit.servicee.Name}}</div>\r\n            <div class=\"text\">{{visit.servicee.Price}} zł</div>\r\n            <button (click)=\"changeStatus(visit.VisitId)\">Wykonana</button>\r\n         </li>\r\n      </ul>\r\n   </div>\r\n   <div class=\"div_buttons\">\r\n      <button class=\"btn\" routerLink=\"/adminpanel\">Wstecz</button>\r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SharedService } from 'src/app/shared.service';\n\n@Component({\n  selector: 'app-adminhistory',\n  templateUrl: './adminhistory.component.html',\n  styleUrls: ['./adminhistory.component.css']\n})\nexport class AdminhistoryComponent implements OnInit {\n\n  visits: any\n\n  constructor(private service: SharedService) { }\n\n  ngOnInit(): void {\n    this.showVisits()\n  }\n\n  showVisits() {\n    this.service.visitsall().subscribe(res => this.visits = res)\n  }\n\n  changeStatus(id: number) {\n    this.service.changeStatus(id, {Status: 'W'}).subscribe(res => {\n      console.log(res)\n      this.showVisits()\n    })\n  }\n\n}\n","<div class=\"content\">\n   <h1>Historia wizyt</h1>\n   <div class=\"grey_list\">\n      <ul>\n         <li *ngFor=\"let visit of visitsW\">\n            <div class=\"date\">{{visit.Ddate}}</div>\n            <div class=\"type\">{{visit.servicee.Name}}</div>\n            <div class=\"price\">{{visit.servicee.Price}} zł</div>\n         </li>\n      </ul>\n   </div>\n   <div class=\"div_buttons\">\n      <button class=\"btn\" routerLink=\"/userpanel\">Wstecz</button>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ILoggedUser } from '../login/interface';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n\n  visitsW: any\n  userData: ILoggedUser = this.dataService.sharedData\n\n  constructor(private dataService: DataService,\n              private service: SharedService) { }\n\n  ngOnInit(): void {\n    this.showPastVisits()\n  }\n\n  showPastVisits() {\n    this.service.visitsw(this.userData.CustomerId).subscribe(res => this.visitsW = res )\n  }\n}\n","<div class=\"content\">\n   <h1>Witaj, {{userData.Name}} {{userData.LastName}}</h1>\n   <div class=\"div_buttons\">\n      <button class=\"btn\" routerLink=\"/makevisit\">Umów wizytę</button>\n      <button class=\"btn\" routerLink=\"/visithistory\">Historia wizyt</button>\n      <button class=\"btn\" routerLink=\"/login\">Wyloguj</button>\n   </div>\n   <div class=\"grey_list\">\n      <h2>Kolejne wizyty</h2>\n      <ul>\n         <li *ngFor=\"let visit of visits\">\n            <div class=\"date\">{{visit.Ddate}}</div>\n            <div class=\"type\">{{visit.servicee.Name}}</div>\n            <button (click)=\"delVisit(visit.VisitId)\">Anuluj wizytę</button>\n         </li>\n         <h3>Suma opłat za wizyty: {{sum}} zł</h3>\n      </ul>\n   </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ILoggedUser } from '../login/interface';\nimport { SharedService } from '../shared.service';\n\n@Component({\n  selector: 'app-userpanel',\n  templateUrl: './userpanel.component.html',\n  styleUrls: ['./userpanel.component.css'],\n})\nexport class UserpanelComponent implements OnInit {\n\n  visits: any;\n  userData: ILoggedUser = this.dataService.sharedData;\n  sum: number = 0;\n  \n  constructor(private dataService: DataService,\n              private service: SharedService) { }\n  \n  ngOnInit(): void {\n    this.refreshVisits()\n    this.getServicee()\n  }\n\n  refreshVisits() {\n    this.service.visits({ CustomerId: this.userData.CustomerId }).subscribe(res => {\n      this.visits = res \n      console.log(this.visits)\n      let a = 0\n      this.sum = 0\n      while(this.visits[a].servicee.Price != undefined) {\n        this.sum += this.visits[a].servicee.Price\n        a++\n      }\n    }) \n  }\n\n  getServicee() {\n    this.service.services().subscribe(res => this.dataService.servicesData = res)\n  }\n\n  delVisit(visit_id) {\n    this.service.delVisit(visit_id).subscribe(res => this.refreshVisits())\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  readonly APIUrl = 'https://fryzjerprojekt.herokuapp.com';\n  // readonly APIUrl = 'http://127.0.0.1:8000';\n\n  constructor(private http:HttpClient) { }\n  \n  registerLogin(x: any) { return this.http.post(this.APIUrl + '/registerlogin', x); }\n  register(y: any)      { return this.http.post(this.APIUrl + '/register', y); }\n  login(x: any)         { return this.http.post(this.APIUrl + '/login', x); }\n  auth(x: any)          { return this.http.post(this.APIUrl + '/auth', x); }\n  visits(x: any)        { return this.http.post(this.APIUrl + '/nextvisit', x); }\n  visitsw(id: number)   { return this.http.get(this.APIUrl + '/visitW/' + id +'/'); }\n  makevisit(x: any)     { return this.http.post(this.APIUrl + '/visit', x); }\n  services()            { return this.http.get(this.APIUrl + '/servicee'); }\n  visitsall()           { return this.http.get(this.APIUrl + '/vall'); }\n  changeStatus(id: number, x: any) { return this.http.put(this.APIUrl + '/visit/' + id + '/', x); }\n  delVisit(id: number)  { return this.http.delete(this.APIUrl + '/visit/' + id); }\n  getUser(x: any)       { return this.http.post(this.APIUrl + '/customerunr', x); }\n  checkdate(x: any)     { return this.http.post(this.APIUrl + '/checkdate', x); }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainComponent } from './main/main.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserpanelComponent } from './userpanel/userpanel.component';\nimport { MakevisitComponent } from './makevisit/makevisit.component';\nimport { HistoryComponent } from './history/history.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { MakeuservisitComponent } from './admin/makeuservisit/makeuservisit.component';\nimport { AdminhistoryComponent } from './admin/adminhistory/adminhistory.component';\n\nconst routes: Routes = [\n  {path: '', component: MainComponent},\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'userpanel', component: UserpanelComponent},\n  {path: 'makevisit', component: MakevisitComponent},\n  {path: 'visithistory', component: HistoryComponent},\n  {path: 'adminpanel', component: AdminComponent},\n  {path: 'makeuservisit', component: MakeuservisitComponent},\n  {path: 'adminhistory', component: AdminhistoryComponent}\n]\n\n@NgModule({\n  declarations: [],\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DataService } from '../data.service';\nimport { SharedService } from '../shared.service';\nimport { ILoggedUser } from './interface';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  currentUser:ILoggedUser[];\n\n  constructor(private fb:FormBuilder,\n              private service: SharedService,\n              private router: Router,\n              private dataService: DataService) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.fb.group({\n      email: ['', [ Validators.required, Validators.email ]],\n      pass: ['', [ Validators.required ]]\n    })\n  }\n\n  submitHandler() {\n    var x = { Email: this.loginForm.get('email').value, Pass: this.loginForm.get('pass').value }\n    this.service.login(x).subscribe(res => { \n        if (res != \"Failed to Add\") {\n          var x = { UserId: res[0].UserId }\n          this.service.auth(x).subscribe(res => {\n            this.dataService.sharedData = res[0];\n            console.log(this.dataService.sharedData)\n            this.router.navigate(['../userpanel'])\n          })\n        } else {\n          console.log('login error')\n          this.loginForm.reset()\n        }\n      })\n  }\n\n}\n","<div class=\"content\">\n   <h1>Salon fryzjerski</h1>\n   \n   <form [formGroup]=\"loginForm\" (ngSubmit)=\"submitHandler()\">\n\n      <label for=\"email\">email</label>\n      <input id=\"email\" type=\"text\" formControlName=\"email\">\n\n      <label for=\"pass\">hasło</label>\n      <input id=\"pass\" type=\"password\" formControlName=\"pass\">\n\n      <div class=\"btns\">\n         <button class=\"btn\" routerLink=\"/\">Wstecz</button>\n         <button class=\"btn\" [disabled]=\"loginForm.invalid\" routerLink=\"/login\">Zaloguj</button>\n         <button class=\"btn\" routerLink=\"/adminpanel\">Administrator</button>\n      </div>\n   </form>\n </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"content\">\r\n   <h1>Salon fryzjerski</h1>\r\n   <div class=\"text\">Po wejściu do naszego salonu od razu czuć gościnną atmosferę; tę energię, która powoduje, że każdy tu się fantastycznie odnajduje. Wychodzimy z założenia, że cenionego salonu fryzjerskiego nie tworzy miejsce, tylko ludzie, dlatego nasza ekipa to starannie dobrane osoby, które tworzą wspólną zgraną całość. Nasi styliści, to świetni fachowcy - mają wyobraźnie, kreatywność i dobry warsztat. Odwiedź jeden z naszych salonów i poczuj ten wyjątkowy klimat!</div>\r\n   <div class=\"btns\">\r\n     <button class=\"btn\" routerLink=\"/login\">Zaloguj</button>\r\n     <button class=\"btn\" routerLink=\"/register\">Rejestruj</button>\r\n   </div>\r\n </div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}